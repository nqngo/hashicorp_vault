---
- name: Ensure Raft backend {{ vault_raft_path }} path is created
  become: true
  ansible.builtin.file:
    path: "{{ vault_raft_path }}"
    owner: vault
    group: vault
    state: directory
    mode: '0700'

- name: Populate Vault config
  become: true
  ansible.builtin.blockinfile:
    path: "{{ vault_config_path }}"
    insertbefore: "EOF"
    marker: "# {mark} ANSIBLE MANAGED CONFIG"
    block: "{{ lookup('ansible.builtin.template', 'config.hcl.j2') }}"
    owner: vault
    group: vault
    create: true
    mode: '0644'

- name: Configure Vault systemd service
  become: true
  ansible.builtin.template:
    src: vault.service.j2
    dest: "{{ vault_systemd_path }}"
    owner: root
    group: root
    mode: '0644'
  notify:
    - Reload systemd deamons
    - Restart Vault systemd service

- name: Install license when using Vault Enterprise
  become: true
  ansible.builtin.copy:
    src: "{{ vault_lic_src_path }}"
    dest: "{{ vault_lic_dest_path }}"
    owner: vault
    group: vault
    mode: '0400'
  when: vault_version is search("enterprise")

- name: Set license_path when using Vault Enterprise
  become: true
  ansible.builtin.lineinfile:
    path: "{{ vault_config_path }}"
    regex: '^license_path\ ='
    line: license_path = "{{ vault_lic_dest_path }}"
    insertbefore: "EOF"
  when: vault_version is search("enterprise")
